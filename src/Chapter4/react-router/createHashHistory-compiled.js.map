{"version":3,"sources":["createHashHistory.js"],"names":[],"mappings":"AAAA,OAAO,aAAP,MAA0B,iBAA1B;AACA,SAAS,iBAAT,GAA6B;AACzB,QAAI,UAAU,UAAU,MAAV,IAAoB,CAApB,IAAyB,UAAU,CAAV,MAAiB,SAA1C,GAAsD,EAAtD,GAA2D,UAAU,CAAV,CAAzE;;AAEA,QAAI,gBAAgB,CAApB;AAAA,QACI,yBAAyB,SAD7B;AAEA,aAAS,kBAAT,GAA6B;AACzB,eAAO;AACH,kBAAK,OAAO,QAAP,CAAgB,IAAhB,CAAqB,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,KAAsC;AADxC,SAAP;AAGH;AACD,QAAI,UAAU,cAAc,OAAO,MAAP,CAAc,EAAd,EAAiB,OAAjB,EAAyB;AACjD,4BAAmB;AAD8B,KAAzB,CAAd,CAAd;AAGA,aAAS,uBAAT,CAAiC,IAAjC,EAAuC;AACnC,YAAI,eAAe,KAAK,YAAxB;AACA,iBAAS,kBAAT,GAA8B;AAC1B,yBAAa,oBAAb;AACH;AACD,eAAO,gBAAP,CAAwB,YAAxB,EAAqC,kBAArC,EAAyD,KAAzD;AACA,eAAO,YAAY;AACf,mBAAO,mBAAP,CAA2B,YAA3B,EAAyC,kBAAzC,EAA4D,KAA5D;AACH,SAFD;AAGH;AACD,aAAS,MAAT,CAAgB,QAAhB,EAA0B;AACtB,YAAI,EAAE,aAAF,KAAoB,CAAxB,EAA2B,yBAAyB,wBAAwB,OAAxB,CAAzB;AAC3B,YAAI,WAAW,QAAQ,MAAR,CAAe,QAAf,CAAf;AACA,eAAO,YAAY;AACf;AACA,gBAAI,EAAE,aAAF,KAAoB,CAAxB,EAA2B;AAC9B,SAHD;AAIH;AACD,WAAO,OAAO,MAAP,CAAc,EAAd,EAAkB,OAAlB,EAA2B;AAC9B,gBAAQ;AADsB,KAA3B,CAAP;AAGH;;AAED,eAAe,iBAAf","file":"createHashHistory-compiled.js","sourcesContent":["import createHistory from './createHistory'\nfunction createHashHistory() {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    let listenerCount = 0,\n        stopHashChangeListener = undefined;\n    function getCurrentLocation(){\n        return {\n            path:window.location.href.split('#')[1] || ''\n        }\n    }\n    let history = createHistory(Object.assign({},options,{\n        getCurrentLocation:getCurrentLocation\n    }));\n    function startHashChangeListener(_ref) {\n        var transitionTo = _ref.transitionTo;\n        function hashChangeListener() {\n            transitionTo(getCurrentLocation());\n        }\n        window.addEventListener('hashchange',hashChangeListener, false);\n        return function () {\n            window.removeEventListener('hashchange', hashChangeListener,false);\n        };\n    }\n    function listen(listener) {\n        if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);\n        var unlisten = history.listen(listener);\n        return function () {\n            unlisten();\n            if (--listenerCount === 0) stopHashChangeListener();\n        };\n    }\n    return Object.assign({}, history, {\n        listen: listen\n    });\n}\n\nexport default createHashHistory"]}