{"version":3,"sources":["event.js"],"names":[],"mappings":"AAAA,SAAQ,WAAR,QAA0B,aAA1B;;AAEA,IAAI,KAAJ;AACA,IAAI,CAAC,QAAQ,GAAR,CAAY,OAAjB,EAA0B;AACtB,YAAQ,QAAQ,OAAR,EAAiB,KAAzB;AACH;AACD,IAAI,MAAO,QAAM,MAAM,eAAN,CAAN,GAA6B,QAAxC;;AAEA,IAAI,aAAa,EAAjB;AACA,IAAI,WAAW,SAAS,QAAT,CAAkB,IAAlB,EAAwB,SAAxB,EAAmC,QAAnC,EAA6C;AACxD,gBAAY,UAAU,WAAV,EAAZ;;AAEA,QAAI,aAAa,KAAK,UAAL,KAAoB,KAAK,UAAL,GAAkB,EAAtC,CAAjB;AACA,eAAW,SAAX,IAAwB,QAAxB;;AAEA,QAAI,CAAC,WAAW,SAAX,CAAL,EAA4B;AACxB;AACA,YAAI,gBAAJ,CAAqB,UAAU,MAAV,CAAiB,CAAjB,CAArB,EAA0C,aAA1C;AACA,mBAAW,SAAX,IAAwB,IAAxB;AACH;AACJ,CAXD;;AAaA,IAAI,gBAAgB,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC9C,QAAI,SAAS,MAAM,MAAnB;AACA,QAAI,OAAO,MAAM,IAAjB;;AAEA,QAAI,YAAY,OAAO,IAAvB;AACA,gBAAY,SAAZ,GAAwB,IAAxB;AACA,WAAO,MAAP,EAAe;AACX,YAAI,UAAU,MAAd;AACA,YAAI,aAAa,QAAQ,UAAzB;;AAEA,YAAI,WAAW,cAAc,WAAW,SAAX,CAA7B;AACA,YAAI,CAAC,QAAL,EAAe;AACX,qBAAS,OAAO,UAAhB;AACA;AACH;AACD,iBAAS,IAAT,CAAc,MAAd,EAAsB,KAAtB;AACA,iBAAS,OAAO,UAAhB;AACH;AACD,gBAAY,SAAZ,GAAwB,KAAxB;AACA,gBAAY,WAAZ;AACH,CApBD;;AAsBA,SAAQ,QAAR","file":"event-compiled.js","sourcesContent":["import {updateQueue} from './component'\n\nlet jsdom;\nif (!process.env.BROWSER) {\n    jsdom = require('jsdom').jsdom;\n}\nlet doc = (jsdom?jsdom(\"<html></html>\"):document);\n\nvar eventTypes = {};\nvar addEvent = function addEvent(elem, eventType, listener) {\n    eventType = eventType.toLowerCase();\n\n    var eventStore = elem.eventStore || (elem.eventStore = {});\n    eventStore[eventType] = listener;\n\n    if (!eventTypes[eventType]) {\n        // onclick -> click\n        doc.addEventListener(eventType.substr(2), dispatchEvent);\n        eventTypes[eventType] = true;\n    }\n};\n\nvar dispatchEvent = function dispatchEvent(event) {\n    var target = event.target;\n    var type = event.type;\n\n    var eventType = 'on' + type;\n    updateQueue.isPending = true;\n    while (target) {\n        var _target = target;\n        var eventStore = _target.eventStore;\n\n        var listener = eventStore && eventStore[eventType];\n        if (!listener) {\n            target = target.parentNode;\n            continue;\n        }\n        listener.call(target, event);\n        target = target.parentNode;\n    }\n    updateQueue.isPending = false;\n    updateQueue.batchUpdate();\n};\n\nexport {addEvent}\n"]}