{"version":3,"sources":["component.js"],"names":[],"mappings":"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","file":"component-compiled.js","sourcesContent":["import {renderComponent,initVnode} from './element'\nimport {updateVnode} from './updateElement'\n\nimport {eachItem,isFn,isArr,extend} from './utils'\n\nvar shouldUpdate = function shouldUpdate(component, nextProps, nextState, nextContext, callback) {\n    var cache = component.$cache;\n    cache.props = nextProps;\n    cache.state = nextState;\n    component.forceUpdate(callback);\n};\nexport let  updateQueue = {\n    updaters: [],\n    isPending: false,\n    add: function add(updater) {\n        this.updaters.push(updater);\n    },\n    batchUpdate: function batchUpdate() {\n        if (this.isPending) {\n            return;\n        }\n        this.isPending = true;\n        /*\n         each updater.update may add new updater to updateQueue\n         clear them with a loop\n         event bubbles from bottom-level to top-level\n         reverse the updater order can merge some props and state and reduce the refresh times\n         see Updater.update method below to know why\n         */\n        var updaters = this.updaters;\n\n        var updater = undefined;\n        while (updater = updaters.pop()) {\n            updater.updateComponent();\n        }\n        this.isPending = false;\n    }\n};\n\nfunction Updater(instance) {\n    this.instance = instance;\n    this.pendingStates = [];\n    this.pendingCallbacks = [];\n    this.isPending = false;\n    this.nextProps = this.nextContext = null;\n    this.clearCallbacks = this.clearCallbacks.bind(this);\n}\n\nUpdater.prototype={\n    emitUpdate: function emitUpdate(nextProps, nextContext) {\n        this.nextProps = nextProps;\n        this.nextContext = nextContext;\n        // receive nextProps!! should update immediately\n        nextProps || !updateQueue.isPending ? this.updateComponent() : updateQueue.add(this);\n    },\n    addState: function addState(nextState) {\n        if (nextState) {\n            this.pendingStates.push(nextState);\n            if (!this.isPending) {\n                this.emitUpdate();\n            }\n        }\n    },\n    addCallback: function addCallback(callback) {\n        if (isFn(callback)) {\n            this.pendingCallbacks.push(callback);\n        }\n    },\n    updateComponent: function updateComponent() {\n        var instance = this.instance;\n        var pendingStates = this.pendingStates;\n        var nextProps = this.nextProps;\n        var nextContext = this.nextContext;\n\n        if (nextProps || pendingStates.length > 0) {\n            nextProps = nextProps || instance.props;\n            nextContext = nextContext || instance.context;\n            this.nextProps = this.nextContext = null;\n            // merge the nextProps and nextState and update by one time\n            shouldUpdate(instance, nextProps, this.getState(), nextContext, this.clearCallbacks);\n        }\n    },\n    getState: function getState() {\n        var instance = this.instance;\n        var pendingStates = this.pendingStates;\n        var state = instance.state;\n        var props = instance.props;\n\n        if (pendingStates.length) {\n            state = extend({}, state);\n            eachItem(pendingStates, function (nextState) {\n                // replace state\n                if (isArr(nextState)) {\n                    state = extend({}, nextState[0]);\n                    return;\n                }\n                if (isFn(nextState)) {\n                    nextState = nextState.call(instance, state, props);\n                }\n                extend(state, nextState);\n            });\n            pendingStates.length = 0;\n        }\n        return state;\n    },\n    clearCallbacks: function clearCallbacks() {\n        var pendingCallbacks = this.pendingCallbacks;\n        var instance = this.instance;\n\n        if (pendingCallbacks.length > 0) {\n            this.pendingCallbacks = [];\n            eachItem(pendingCallbacks, function (callback) {\n                return callback.call(instance);\n            });\n        }\n    },\n}\n\nfunction compareTwoVnodes(vnode, newVnode, node, parentContext) {\n    var newNode = node;\n    updateVnode(vnode, newVnode, node, parentContext);\n    return newNode;\n}\n\nexport let pendingComponents = [];\n\nexport let clearPendingComponents = function clearPendingComponents() {\n    var components = pendingComponents;\n    var len = components.length;\n    if (!len) {\n        return;\n    }\n    pendingComponents = [];\n    var i = -1;\n    while (len--) {\n        var component = components[++i];\n        var updater = component.$updater;\n\n        updater.isPending = false;\n        updater.emitUpdate();\n    }\n};\nfunction Component(props, context) {\n    this.$cache = { isMounted: false };\n    this.$updater = new Updater(this);\n    this.props = props;\n    this.state = {};\n    this.refs = {};\n    this.context = context || {};\n}\n\nComponent.prototype = {\n    setState: function setState(nextState, callback) {\n        var $updater = this.$updater;\n\n        $updater.addCallback(callback);\n        $updater.addState(nextState);\n    },\n    forceUpdate: function forceUpdate(callback) {\n        var $updater = this.$updater;\n        var $cache = this.$cache;\n        var props = this.props;\n        var state = this.state;\n        var context = this.context;\n        var node = $cache.node;\n        var vnode = $cache.vnode;\n        if ($updater.isPending) {\n            return;\n        }\n        var nextProps = $cache.props || props;\n        var nextState = $cache.state || state;\n        var nextContext =  {};\n        $updater.isPending = true;\n\n        this.state = nextState;\n        this.props = nextProps;\n        this.context = nextContext;\n        var newVnode = renderComponent(this);\n        var newNode = compareTwoVnodes(vnode, newVnode, node, newVnode.context);\n        $cache.vnode = newVnode;\n        $cache.node = newNode;\n        clearPendingComponents();\n\n        $updater.isPending = false;\n        $updater.emitUpdate();\n    },\n}\n\nexport {Component}"]}