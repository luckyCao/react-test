{"version":3,"sources":["updateElement.js"],"names":[],"mappings":"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","file":"updateElement-compiled.js","sourcesContent":["import {patchProps} from './props'\nimport {VELEMENT,HTML_KEY} from './constants'\nimport {flatEach} from './utils'\n\nfunction applyUpdate(data) {\n    if (!data) {\n        return\n    }\n    let vnode = data.vnode\n    let newNode = data.node\n\n    // update\n    if (!data.shouldIgnore) {\n        if (!vnode.vtype) {\n            newNode.replaceData(0, newNode.length, data.newVnode)\n            // newNode.nodeValue = data.newVnode\n        } else if (vnode.vtype === VELEMENT) {\n            updateVelem(vnode, data.newVnode, newNode, data.parentContext)\n        } else if (vnode.vtype === VSTATELESS) {\n            newNode = updateVstateless(vnode, data.newVnode, newNode, data.parentContext)\n        } else if (vnode.vtype === VCOMPONENT) {\n            newNode = updateVcomponent(vnode, data.newVnode, newNode, data.parentContext)\n        }\n    }\n\n    // re-order\n    let currentNode = newNode.parentNode.childNodes[data.index]\n    if (currentNode !== newNode) {\n        newNode.parentNode.insertBefore(newNode, currentNode)\n    }\n    return newNode\n}\n\n\nfunction applyDestroy(data) {\n    destroyVnode(data.vnode, data.node)\n    data.node.parentNode.removeChild(data.node)\n}\n\nfunction applyCreate(data) {\n    let node = initVnode(data.vnode, data.parentContext, data.parentNode.namespaceURI)\n    data.parentNode.insertBefore(node, data.parentNode.childNodes[data.index])\n}\nfunction updateVnode(vnode, newVnode, node, parentContext) {\n    var vtype = vnode.vtype;\n\n    // ignore VCOMMENT and other vtypes\n    if (vtype !== VELEMENT) {\n        return node;\n    }\n\n    var oldHtml = vnode.props[HTML_KEY] && vnode.props[HTML_KEY].__html;\n    if (oldHtml != null) {\n        updateVelem(vnode, newVnode, node, parentContext);\n        initVchildren(newVnode, node, parentContext);\n    } else {\n        updateVChildren(vnode, newVnode, node, parentContext);\n        updateVelem(vnode, newVnode, node, parentContext);\n    }\n    return node;\n}\n\nfunction updateVChildren(vnode, newVnode, node, parentContext) {\n    var patches = {\n        removes: [],\n        updates: [],\n        creates: []\n    };\n    diffVchildren(patches, vnode, newVnode, node, parentContext);\n    flatEach(patches.removes, applyDestroy);\n    flatEach(patches.updates, applyUpdate);\n    flatEach(patches.creates, applyCreate);\n}\n\nfunction diffVchildren(patches, vnode, newVnode, node, parentContext) {\n    var childNodes = node.childNodes;\n    var vchildren = node.vchildren;\n    var tempChild = newVnode.props.children;\n    if(!(tempChild instanceof  Array)){\n        tempChild = [tempChild];\n    }\n    var newVchildren = node.vchildren = tempChild;\n    var vchildrenLen = vchildren?vchildren.length:0;\n    var newVchildrenLen = newVchildren.length;\n\n    if (vchildrenLen === 0) {\n        if (newVchildrenLen > 0) {\n            for (var i = 0; i < newVchildrenLen; i++) {\n                patches.creates.push({\n                    vnode: newVchildren[i],\n                    parentNode: node,\n                    parentContext: parentContext,\n                    index: i\n                });\n            }\n        }\n        return;\n    } else if (newVchildrenLen === 0) {\n        for (var i = 0; i < vchildrenLen; i++) {\n            patches.removes.push({\n                vnode: vchildren[i],\n                node: childNodes[i]\n            });\n        }\n        return;\n    }\n\n    var updates = Array(newVchildrenLen);\n    var removes = null;\n    var creates = null;\n\n    // isEqual\n    for (var i = 0; i < vchildrenLen; i++) {\n        var _vnode = vchildren[i];\n        for (var j = 0; j < newVchildrenLen; j++) {\n            if (updates[j]) {\n                continue;\n            }\n            var _newVnode = newVchildren[j];\n            if (_vnode === _newVnode) {\n                var shouldIgnore = true;\n                if (parentContext) {\n                    if (_vnode.vtype === 4 || _vnode.vtype === 5) {\n                        if (_vnode.type.contextTypes) {\n                            shouldIgnore = false;\n                        }\n                    }\n                }\n                updates[j] = {\n                    shouldIgnore: shouldIgnore,\n                    vnode: _vnode,\n                    newVnode: _newVnode,\n                    node: childNodes[i],\n                    parentContext: parentContext,\n                    index: j\n                };\n                vchildren[i] = null;\n                break;\n            }\n        }\n    }\n\n    // isSimilar\n    for (var i = 0; i < vchildrenLen; i++) {\n        var _vnode2 = vchildren[i];\n        if (_vnode2 === null) {\n            continue;\n        }\n        var shouldRemove = true;\n        for (var j = 0; j < newVchildrenLen; j++) {\n            if (updates[j]) {\n                continue;\n            }\n            var _newVnode2 = newVchildren[j];\n            if (_newVnode2.type === _vnode2.type && _newVnode2.key === _vnode2.key && _newVnode2.refs === _vnode2.refs) {\n                updates[j] = {\n                    vnode: _vnode2,\n                    newVnode: _newVnode2,\n                    node: childNodes[i],\n                    parentContext: parentContext,\n                    index: j\n                };\n                shouldRemove = false;\n                break;\n            }\n        }\n        if (shouldRemove) {\n            if (!removes) {\n                removes = [];\n            }\n            removes.push({\n                vnode: _vnode2,\n                node: childNodes[i]\n            });\n        }\n    }\n\n    for (var i = 0; i < newVchildrenLen; i++) {\n        var item = updates[i];\n        if (!item) {\n            if (!creates) {\n                creates = [];\n            }\n            creates.push({\n                vnode: newVchildren[i],\n                parentNode: node,\n                parentContext: parentContext,\n                index: i\n            });\n        } else if (item.vnode.vtype === 2) {\n            diffVchildren(patches, item.vnode, item.newVnode, item.node, item.parentContext);\n        }\n    }\n\n    if (removes) {\n        patches.removes.push(removes);\n    }\n    if (creates) {\n        patches.creates.push(creates);\n    }\n    patches.updates.push(updates);\n}\n\n\nfunction updateVelem(velem, newVelem, node) {\n    var isCustomComponent = velem.type.indexOf('-') >= 0 || velem.props.is != null;\n    patchProps(node, velem.props, newVelem.props, isCustomComponent);\n\n    return node;\n}\n\n\nexport {updateVnode}"]}